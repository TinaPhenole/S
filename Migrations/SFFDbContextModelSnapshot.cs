// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SFF_Komplettering.Data;

namespace SFF_Komplettering.Migrations
{
    [DbContext(typeof(SFFDbContext))]
    partial class SFFDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SFF_Komplettering.FilmAssociation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("ZipCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("FilmAssociation");
                });

            modelBuilder.Entity("SFF_Komplettering.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<int>("Licenses")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("isDigital")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("SFF_Komplettering.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FilmAssociationId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FilmAssociationId");

                    b.HasIndex("MovieId");

                    b.ToTable("Rental");
                });

            modelBuilder.Entity("SFF_Komplettering.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FilmAssociationId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReviewContent")
                        .HasMaxLength(750)
                        .HasColumnType("TEXT");

                    b.Property<string>("ReviewTitle")
                        .HasColumnType("TEXT");

                    b.Property<int>("ScoreValue")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FilmAssociationId");

                    b.HasIndex("MovieId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("SFF_Komplettering.Rental", b =>
                {
                    b.HasOne("SFF_Komplettering.FilmAssociation", "FilmAssociation")
                        .WithMany()
                        .HasForeignKey("FilmAssociationId");

                    b.HasOne("SFF_Komplettering.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId");

                    b.Navigation("FilmAssociation");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("SFF_Komplettering.Review", b =>
                {
                    b.HasOne("SFF_Komplettering.FilmAssociation", "FilmAssociation")
                        .WithMany()
                        .HasForeignKey("FilmAssociationId");

                    b.HasOne("SFF_Komplettering.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId");

                    b.Navigation("FilmAssociation");

                    b.Navigation("Movie");
                });
#pragma warning restore 612, 618
        }
    }
}
